//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ContactManager.Services
{
    using CodeFluent.Runtime;
    using CodeFluent.Runtime.Utilities;
    
    
    // CodeFluent Entities generated Thursday, 13 February 2014 19:31.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("CodeFluent Entities", "1.0.61214.0762")]
    public partial class ContactSourceService : ContactManager.Services.IContactSourceService
    {
        
        public virtual string Validate(ContactManager.ContactSource contactSource, string culture)
        {
            System.Globalization.CultureInfo cultureInfo = ConvertUtilities.ToCultureInfo(culture);
            ContactManager.ContactSource contactSource1 = contactSource;
            if ((contactSource1 == null))
            {
                return default(string);
            }
            return contactSource1.Validate(cultureInfo);
        }
        
        public virtual bool Delete(ContactManager.ContactSource contactSource)
        {
            ContactManager.ContactSource contactSource1 = contactSource;
            if ((contactSource1 == null))
            {
                return CodeFluentPersistence.DefaultBooleanValue;
            }
            return contactSource1.Delete();
        }
        
        public virtual ContactManager.ContactSource Load(int id)
        {
            return ContactManager.ContactSource.Load(id);
        }
        
        public virtual ContactManager.ContactSource LoadById(int id)
        {
            return ContactManager.ContactSource.LoadById(id);
        }
        
        public virtual bool Save(ContactManager.ContactSource contactSource)
        {
            ContactManager.ContactSource contactSource1 = contactSource;
            if ((contactSource1 == null))
            {
                return CodeFluentPersistence.DefaultBooleanValue;
            }
            return contactSource1.Save();
        }
        
        public virtual bool SaveByRef(ref ContactManager.ContactSource contactSource)
        {
            ContactManager.ContactSource contactSource1 = contactSource;
            if ((contactSource1 == null))
            {
                return CodeFluentPersistence.DefaultBooleanValue;
            }
            bool ret = contactSource1.Save();
            contactSource = contactSource1;
            return ret;
        }
        
        public virtual ContactManager.ContactSource LoadByEntityKey(string key)
        {
            return ContactManager.ContactSource.LoadByEntityKey(key);
        }
        
        public virtual bool DeleteByKey(int id)
        {
            ContactManager.ContactSource contactSource = ContactManager.ContactSource.Load(id);
            if ((contactSource == null))
            {
                return CodeFluentPersistence.DefaultBooleanValue;
            }
            return contactSource.Delete();
        }
        
        public virtual void SaveAll(ContactManager.ContactSourceCollection contactSourceCollection)
        {
            ContactManager.ContactSourceCollection contactSourceCollection1 = contactSourceCollection;
            contactSourceCollection1.SaveAll();
        }
        
        public virtual ContactManager.ContactSourceCollection PageLoadAll(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions)
        {
            return ContactManager.ContactSourceCollection.PageLoadAll(pageIndex, pageSize, pageOptions);
        }
        
        public virtual ContactManager.ContactSourceCollection LoadAll()
        {
            return ContactManager.ContactSourceCollection.LoadAll();
        }
    }
}
