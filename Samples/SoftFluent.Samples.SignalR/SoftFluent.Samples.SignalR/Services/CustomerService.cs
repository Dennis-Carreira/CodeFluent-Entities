//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoftFluent.Samples.SignalR.Services
{
    using CodeFluent.Runtime;
    using CodeFluent.Runtime.Utilities;
    
    
    // CodeFluent Entities generated Monday, 03 November 2014 12:12.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("CodeFluent Entities", "1.0.61214.0786")]
    public partial class CustomerService : SoftFluent.Samples.SignalR.Services.ICustomerService
    {
        
        public virtual string Validate(SoftFluent.Samples.SignalR.Customer customer, string culture)
        {
            System.Globalization.CultureInfo cultureInfo = ConvertUtilities.ToCultureInfo(culture);
            SoftFluent.Samples.SignalR.Customer customer1 = customer;
            if ((customer1 == null))
            {
                return default(string);
            }
            return customer1.Validate(cultureInfo);
        }
        
        public virtual bool Delete(SoftFluent.Samples.SignalR.Customer customer)
        {
            SoftFluent.Samples.SignalR.Customer customer1 = customer;
            if ((customer1 == null))
            {
                return CodeFluentPersistence.DefaultBooleanValue;
            }
            return customer1.Delete();
        }
        
        public virtual SoftFluent.Samples.SignalR.Customer Load(System.Guid id)
        {
            return SoftFluent.Samples.SignalR.Customer.Load(id);
        }
        
        public virtual SoftFluent.Samples.SignalR.Customer LoadById(System.Guid id)
        {
            return SoftFluent.Samples.SignalR.Customer.LoadById(id);
        }
        
        public virtual bool Save(SoftFluent.Samples.SignalR.Customer customer)
        {
            SoftFluent.Samples.SignalR.Customer customer1 = customer;
            if ((customer1 == null))
            {
                return CodeFluentPersistence.DefaultBooleanValue;
            }
            return customer1.Save();
        }
        
        public virtual bool SaveByRef(ref SoftFluent.Samples.SignalR.Customer customer)
        {
            SoftFluent.Samples.SignalR.Customer customer1 = customer;
            if ((customer1 == null))
            {
                return CodeFluentPersistence.DefaultBooleanValue;
            }
            bool ret = customer1.Save();
            customer = customer1;
            return ret;
        }
        
        public virtual SoftFluent.Samples.SignalR.Customer LoadByEntityKey(string key)
        {
            return SoftFluent.Samples.SignalR.Customer.LoadByEntityKey(key);
        }
        
        public virtual bool DeleteByKey(System.Guid id)
        {
            SoftFluent.Samples.SignalR.Customer customer = SoftFluent.Samples.SignalR.Customer.Load(id);
            if ((customer == null))
            {
                return CodeFluentPersistence.DefaultBooleanValue;
            }
            return customer.Delete();
        }
        
        public virtual void SaveAll(SoftFluent.Samples.SignalR.CustomerCollection customerCollection)
        {
            SoftFluent.Samples.SignalR.CustomerCollection customerCollection1 = customerCollection;
            customerCollection1.SaveAll();
        }
        
        public virtual SoftFluent.Samples.SignalR.CustomerCollection PageLoadAll(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions)
        {
            return SoftFluent.Samples.SignalR.CustomerCollection.PageLoadAll(pageIndex, pageSize, pageOptions);
        }
        
        public virtual SoftFluent.Samples.SignalR.CustomerCollection LoadAll()
        {
            return SoftFluent.Samples.SignalR.CustomerCollection.LoadAll();
        }
    }
}
